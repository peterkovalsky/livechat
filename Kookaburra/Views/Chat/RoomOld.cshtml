@model Kookaburra.ViewModels.Chat.RoomViewModel

@{
    ViewBag.Title = "Chats";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts{
    <script src="~/lib/signalr/jquery.signalR.js"></script>
    <script src="~/signalr/hubs"></script>
}

<div class="operator-chats">
    <div class="no-chat jumbotron">
        <h1>You have no chats.</h1>
    </div>

    <div class="all-chats" style="display:none;">
        <div class="chat-client" data-client-id="empty" style="display:none;">
            <div class="client-info">
                <div class="client-name"><label>Name: </label><button type="button" style="float:right;" class="btn btn-xs btn-default disconnect">Disconnect</button></div>
                <div class="client-location"><label>Location: </label></div>
                <div class="client-current-url"><label>Looking at: </label><a href="#" target="_blank"></a></div>
            </div>
            <div class="chat-window panel panel-info">
                <div class="title panel-heading">
                    <h3 class="panel-title"></h3>
                </div>
                <div class="chat panel-body"></div>
                <div class="message-box">
                    <textarea class="message"></textarea>
                </div>
            </div>
        </div>
    </div>

    <div class="chat-switcher">
        <div class="list-group"></div>
    </div>
    <div style="clear:both;"></div>
</div>

<script type="text/javascript">
    var companyId = '@Model.CompanyId';
    var operatorId = null;
    var operatorName = '@Model.OperatorName';
    var currentClientId = null;
    var chats = new Array();
    // clientid
    $(document).ready(function () {
        initChat();
        switchChatWindow();


    });

    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }

    function initChat() {

        var chatHubProxy = $.connection.chatHub;

        //------------------- INCOMMING MESSAGE --------------------
        chatHubProxy.client.addNewMessageToPage = function (name, message, time, sender, clientId) {
            // Add the message to the chat.
            if (($('.chat-client[data-client-id=' + clientId + '] .chat li').last().hasClass('my') && sender == 'operator') ||
                (!$('.chat-client[data-client-id=' + clientId + '] .chat li').last().hasClass('my') && sender == 'client'))
            {
                $('.chat-client[data-client-id=' + clientId + '] .chat').append(
                  '<li class="chat-message-item continue ' + (sender == 'operator' ? 'my' : '') + '"><div class="chat-time">'
                  + htmlEncode(time)
                  + '</div><div class="chat-message">'
                  + htmlEncode(message) + '</div><div style="clear:both;"></div></li>');
            }
            else
            {
                $('.chat-client[data-client-id=' + clientId + '] .chat').append(
                  '<li class="chat-message-item ' + (sender == 'operator' ? 'my' : '') + '"><div class="chat-name">'
                  + (sender == 'operator' ? 'You' : htmlEncode(name))
                  + '</div><div class="chat-time">'
                  + htmlEncode(time)
                  + '</div><div class="chat-message">'
                  + htmlEncode(message) + '</div></li>');
            }

            scrollDownChat(clientId);
        };

        //------------------- CLIENT CONNECTED --------------------
        chatHubProxy.client.clientConnected = function (clientId, name, time, location, currentUrl) {
            //add client window frame
            var chatFrame = $('.chat-client[data-client-id=empty]').clone();
            chatFrame.attr('data-client-id', clientId);
            chatFrame.find('.panel-title').html('Chat with ' + name);

            // set client info
            chatFrame.find('.client-name').append(name);
            chatFrame.find('.client-location').append(location);
            chatFrame.find('.client-current-url a').attr('href', currentUrl).html(currentUrl);

            chatFrame.appendTo('.all-chats');

            chatAlert(clientId, name + ' has been connected', time);

            // show first connected client
            var isSwitcherActive = false;
            if ($('.chat-client[data-client-id]').length == 2) {
                isSwitcherActive = true;
                $('.no-chat').hide();
                $('.all-chats').show();

                openChatWindow(clientId);
            }

            // add client switcher
            addClientSwitcher(clientId, name, location, isSwitcherActive);
        };

        //------------------- CLIENT DISCONNECTED --------------------
        chatHubProxy.client.clientDisconnected = function (clientId, name, time) {
            chatAlert(clientId, name + ' has been disconnected', time);
        };

        // ---------------------- OPERATOR DISCONNECTED -------------------
        $.connection.hub.disconnected(function () {
            showError('You were disconnected from the messaging server. Please refresh the page.');
        });

        // Start the connection.
        $.connection.hub.start().done(function () {
            chatHubProxy.server.connectOperator(operatorName, companyId).done(function () { });

            // SEND MESSAGE ON ENTER PRESS
            $(document).keypress(function (e) {
                if (e.which == 13) {
                    var message = $('.chat-client.current .message').val();
                    var clientId = $('.chat-client.current').attr('data-client-id');

                    chatHubProxy.server.sendToClient(operatorName, message, clientId);
                    // Clear text box and reset focus for next comment.
                    e.preventDefault();
                    $('.chat-client.current .message').val('').focus();
                    return false;
                }
            });

            // DISCONNECT A CLIENT
            $("body").on("click", "button.disconnect", function (e) {
                var _clientId = $(this).closest('.chat-client[data-client-id]').attr('data-client-id');
                var name = $(this).closest('.client-info .client-name').val();

                if (confirm("Are you sure you want to disconnect " + name + "?"))
                {
                    chatHubProxy.server.disconnectClient(_clientId);

                    // remove switch button from the list
                    $('.chat-switcher .list-group.current .list-group-item[data-client-id="' + _clientId + '"]').remove();
                }
            });
        });
    }

    function addClientSwitcher(clientId, name, location, isSwitcherActive)
    {
        var clientEl = $('<a href="#" class="list-group-item client-button"><h4 class="list-group-item-heading"></h4><p class="list-group-item-text"></p></a>')
        clientEl.find('.list-group-item-heading').html(name);
        clientEl.find('.list-group-item-text').html(location);
        clientEl.attr('data-client-id', clientId);

        if (isSwitcherActive) {
            clientEl.addClass('active');
        }

        clientEl.appendTo('.chat-switcher .list-group');
    }

    function switchChatWindow() {
        $("body").on("click", "a.client-button", function (e) {
            $('a.client-button').removeClass('active');
            $(this).addClass('active');

            var _clientId = $(this).attr('data-client-id');
            openChatWindow(_clientId);
        });
    }

    function openChatWindow(_clientId)
    {
        $('.chat-client').removeClass('current');
        $('.chat-client').hide();
        $('.chat-client[data-client-id=' + _clientId + ']').addClass('current');
        $('.chat-client[data-client-id=' + _clientId + ']').show();
    }

    function chatAlert(clientId, alert, time)
    {
        $('.chat-client[data-client-id=' + clientId + '] .chat').append(
                '<li class="chat-message-item chat-alert"><div class="chat-time">'
                + htmlEncode(time)
                + '</div><div class="chat-message">'
                + alert + '</div><div style="clear:both;"></div></li>');

        scrollDownChat(clientId);
    }

    function scrollDownChat(clientId)
    {
        // scroll down to the last message
        var obj = $('.chat-client[data-client-id=' + clientId + '] .chat');
        $('.chat-client[data-client-id=' + clientId + '] .chat').animate({ scrollTop: obj.prop('scrollHeight') }, "slow");
    }
</script>
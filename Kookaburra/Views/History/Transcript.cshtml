@model  Kookaburra.Models.History.TranscriptViewModel
@using Kookaburra.Domain.Common;
@using Kookaburra.Common;

<div class="transcript page">

    <div class="page-header">
        <h1 class="page-title">
            <i class="panel-title-icon icon wb-chat" aria-hidden="true"></i>
            Chat Transcript
            <button type="button" class="btn btn-outline btn-info pull-right" onclick="history.go(-1);">
                <i class="icon wb-arrow-left m-r-10" aria-hidden="true"></i>
                Back To List
            </button>
        </h1>
    </div>

    <div class="page-content container-fluid">
        <div class="row">
            <div class="col-sm-8 masonry-item">
                <div class="panel">                 
                    <ul class="list-group list-group-dividered list-group-full">

                        @foreach (var message in Model.Messages)
                        {
                            <li class="list-group-item @(message.SentBy == UserType.Visitor ? "visitor" : "operator")">
                                <div class="media comment">                                    
                                    <div class="media-body comment-body">
                                        <strong>@message.Author</strong>
                                        <div class="comment-meta pull-right">
                                            <span class="date" data-utctime="@message.SentOn.JsDateTime()"></span>
                                        </div>
                                        <div class="comment-content">
                                            <p>@message.Text</p>
                                        </div>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <div class="col-sm-4">
                <div class="card">
                    <div class="card-header white bg-cyan-600 p-30 clearfix">
                        @if (!string.IsNullOrWhiteSpace(Model.Visitor.CountryCode))
                        {
                        <div class="pull-xs-left m-r-20">
                            <span class="flag-icon flag-icon-@(Model.Visitor.CountryCode.ToLower())"></span>
                        </div>
                        }
                        <div class="pull-xs-left">
                            <div class="font-size-24 m-b-15">@Model.Visitor.Name</div>
                            @if (!string.IsNullOrWhiteSpace(Model.Visitor.City) && !string.IsNullOrWhiteSpace(Model.Visitor.Country))
                            {
                            <p class="m-b-5 text-nowrap">
                                <i class="icon wb-map m-r-10" aria-hidden="true"></i>
                                <span class="text-break">@(Model.Visitor.City), @(Model.Visitor.Country)</span>
                            </p>
                            }
                            @if (!string.IsNullOrWhiteSpace(Model.Visitor.Email))
                            {
                            <p class="m-b-5 text-nowrap">
                                <i class="icon wb-envelope m-r-10" aria-hidden="true"></i>
                                <span class="text-break"><a href="mailto:@(Model.Visitor.Email)" class="white">@Model.Visitor.Email</a></span>
                            </p>
                            }
                            <p class="m-b-5 text-nowrap">
                                <i class="icon fa fa-clock-o m-r-10" aria-hidden="true"></i>
                                <span class="text-break" data-utcdate="@Model.TimeStarted.JsDateTime()"></span>
                            </p>
                        </div>
                    </div>
                    <div class="card-footer bg-white">
                        <div class="row no-space p-y-20 p-x-30 text-xs-center">
                            <div class="col-xs-6">
                                <div class="counter">
                                    <span class="counter-number cyan-600">@(Model.Duration.Minutes >= 1 ? $"{Model.Duration.Minutes} min" : $"{Model.Duration.Seconds} sec")</span>
                                    <div class="counter-label">Duration</div>
                                </div>
                            </div>
                            <div class="col-xs-6">
                                <div class="counter">
                                    <span class="counter-number cyan-600">@(Model.Messages.Count())</span>
                                    <div class="counter-label">Messages</div>
                                </div>
                            </div>                        
                        </div>
                    </div>
                </div>               
            </div>
        </div>
    </div>
</div>

@section css
{
    @Styles.Render("~/bundles/css/chathistory")
}
@section js
{
    @Scripts.Render("~/bundles/js/transcript")
}

<script type="text/javascript">
    $(function () {
        $('[data-utcdate]').each(function () {
            var utcTime = parseInt($(this).attr('data-utcdate'), 10) || 0;
            var d = moment(utcTime);
            $(this).html(d.format('lll'));
        });

        $('[data-utctime]').each(function () {
            var utcTime = parseInt($(this).attr('data-utctime'), 10) || 0;
            var d = moment(utcTime);
            $(this).html(d.format('LT'));
        });
    });
</script>
@model Kookaburra.Models.Home.DashboardViewModel

@using Kookaburra.Services.Accounts;
@using Newtonsoft.Json;

<div id="dashboard" class="page dashboard">
    <div class="page-main">
        <div class="page-content">

            @if (Model.AccountStatus == AccountStatusType.TrialExpired)
            {
                @Html.Partial("_TrialExpired", Model.TrialExpiredViewModel)
            }

            <div class="row">

                <div class="col-xl-3 col-md-6 col-xs-12 info-panel">
                    <div class="card card-shadow">
                        <div class="card-block bg-white p-20">
                            <button type="button" class="btn btn-floating btn-sm btn-danger">
                                <i class="icon wb-chat"></i>
                            </button>
                            <span class="m-l-15 font-weight-400">CHATS</span>
                            <div class="content-text text-xs-center m-b-0">
                                <span class="font-size-40 font-weight-100" data-bind="text: totalCurrentChats"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-xl-3 col-md-6 col-xs-12 info-panel">
                    <div class="card card-shadow">
                        <div class="card-block bg-white p-20">
                            <button type="button" class="btn btn-floating btn-sm btn-warning">
                                <i class="icon wb-envelope"></i>
                            </button>
                            <span class="m-l-15 font-weight-400">NEW OFFLINE MESSAGES</span>
                            <div class="content-text text-xs-center m-b-0">
                                <span class="font-size-40 font-weight-100" data-bind="text: newOfflineMessages"></span>
                            </div>
                        </div>
                    </div>
                </div>

            </div>


            <div class="row" data-bind="visible: currentChats().length > 0">
                <div class="col-sm-6">
                    <div class="panel panel-bordered">
                        <div class="panel-body">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Country</th>
                                        <th>Visitor</th>
                                        <th>Started</th>
                                        <th>Page</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody data-bind="foreach: currentChats">
                                    <tr>
                                        <td data-bind="if: countryCode() != null">
                                            <span data-bind="attr: {class: 'flag-icon flag-icon-' + countryCode().toLowerCase()}"></span>
                                        </td>
                                        <td data-bind="text: visitorName"></td>
                                        <td data-bind="text: startedChatTime"></td>
                                        <td>
                                            <a data-bind="attr: {'href': page}" target="_blank">Visited Page</a>
                                        </td>
                                        <td>
                                            <a data-bind="attr: {'href': '/chats/' + chatId()}" class="btn btn-squared btn-outline btn-default btn-sm">Reply</a>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <div class="panel panel-bordered">
                        <div class="panel-body">
                            <canvas id="chats-per-day" width="400" height="100"></canvas>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


@*<script type='text/javascript' data-cfasync='false'>window.purechatApi = { l: [], t: [], on: function () { this.l.push(arguments); } }; (function () { var done = false; var script = document.createElement('script'); script.async = true; script.type = 'text/javascript'; script.src = 'https://app.purechat.com/VisitorWidget/WidgetScript'; document.getElementsByTagName('HEAD').item(0).appendChild(script); script.onreadystatechange = script.onload = function (e) { if (!done && (!this.readyState || this.readyState == 'loaded' || this.readyState == 'complete')) { var w = new PCWidget({ c: 'cccc4c27-504d-46fb-b1ec-f75045fc5bda', f: true }); done = true; } }; })();</script>*@


@*<script>
        window.intercomSettings = {
            app_id: "a79mpbxp"
        };
    </script>
    <script>(function () { var w = window; var ic = w.Intercom; if (typeof ic === "function") { ic('reattach_activator'); ic('update', intercomSettings); } else { var d = document; var i = function () { i.c(arguments) }; i.q = []; i.c = function (args) { i.q.push(args) }; w.Intercom = i; function l() { var s = d.createElement('script'); s.type = 'text/javascript'; s.async = true; s.src = 'https://widget.intercom.io/widget/a79mpbxp'; var x = d.getElementsByTagName('script')[0]; x.parentNode.insertBefore(s, x); } if (w.attachEvent) { w.attachEvent('onload', l); } else { w.addEventListener('load', l, false); } } })()</script>*@


<!--Start of Zendesk Chat Script-->
<script type="text/javascript">
    window.$zopim || (function (d, s) {
        var z = $zopim = function (c) { z._.push(c) }, $ = z.s =
            d.createElement(s), e = d.getElementsByTagName(s)[0]; z.set = function (o) {
                z.set.
                    _.push(o)
            }; z._ = []; z.set._ = []; $.async = !0; $.setAttribute("charset", "utf-8");
        $.src = "https://v2.zopim.com/?59v8uwGim2DoAnn0UWJayCwa28eoTrXE"; z.t = +new Date; $.
            type = "text/javascript"; e.parentNode.insertBefore($, e)
    })(document, "script");
</script>
<!--End of Zendesk Chat Script-->


@section js
{
    @Scripts.Render("~/bundles/js/dashboard")
}


<script type="text/javascript">

    $(document).ready(function () {

        var dashboardViewModel = new DashboardViewModel();
        ko.applyBindings(dashboardViewModel, document.getElementById("dashboard"));

        dashboardViewModel.init();

        // chart widget
        var ctx = document.getElementById("chats-per-day");

        window.chartColors = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(201, 203, 207)'
        };

        var chatsPerDayData = JSON.parse('@(Html.Raw(JsonConvert.SerializeObject(Model.ChatsPerDayWidget)))');

        var dailyChats = [];
        var daysLabels = [];

        if (chatsPerDayData != null) {
            for (var item of chatsPerDayData) {
                dailyChats.push(item.chats);
            }

            for (var item of chatsPerDayData) {
                var utcTime = parseInt(item.day, 10) || 0;
                var date = moment(utcTime);               

                daysLabels.push(date.format('lll'));
            }
        }

        var myLineChart = new Chart(ctx, {
            type: 'line',           
            data: {
                labels: daysLabels,
                datasets: [{
                    label: "My First dataset",
                    backgroundColor: window.chartColors.red,
                    borderColor: window.chartColors.red,
                    fill: false,
                    data: dailyChats,
                }]
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'Chart.js Line Chart - Logarithmic'
                },
                scales: {
                    xAxes: [{
                        display: true,
                    }],
                    yAxes: [{
                        display: true,
                        type: 'logarithmic',
                    }]
                }
            }
        });
    });

</script>
@model Kookaburra.Models.Home.DashboardViewModel

@using Kookaburra.Domain.Common;
@using Newtonsoft.Json;

<div id="dashboard" class="page dashboard">
    <div class="page-main">
        <div class="page-content">

            @if (Model.AccountStatus == AccountStatusType.TrialExpired)
            {
                @Html.Partial("_TrialExpired", Model.TrialExpiredViewModel)
            }

            <div class="row">

                <div class="col-xl-4 col-md-6 col-xs-12 info-panel">
                    <div class="card card-shadow">
                        <div class="card-block bg-white p-20">
                            <button type="button" class="btn btn-floating btn-sm btn-info">
                                <i class="icon wb-chat"></i>
                            </button>
                            <span class="m-l-15 font-weight-400">LIVE CHATS</span>
                            <div class="content-text text-xs-center m-b-0">
                                <span class="font-size-40 font-weight-100" data-bind="text: totalCurrentChats"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-xl-4 col-md-6 col-xs-12 info-panel">
                    <div class="card card-shadow">
                        <div class="card-block bg-white p-20">
                            <button type="button" class="btn btn-floating btn-sm btn-danger">
                                <i class="icon wb-envelope"></i>
                            </button>
                            <span class="m-l-15 font-weight-400">UNREAD MESSAGES</span>
                            <div class="content-text text-xs-center m-b-0">
                                <span class="font-size-40 font-weight-100" data-bind="text: newOfflineMessages"></span>
                            </div>
                        </div>
                    </div>
                </div>

                @if (Model.AccountStatus == AccountStatusType.Trial || Model.AccountStatus == AccountStatusType.TrialExpired)
                {
                <div class="col-xl-4 col-md-6 col-xs-12 info-panel">
                    <div class="card card-shadow">
                        <div class="card-block bg-white p-20">
                            <button type="button" class="btn btn-floating btn-sm btn-warning">
                                <i class="icon wb-calendar"></i>
                            </button>
                            <span class="m-l-15 font-weight-400">TRIAL PERIOD</span>
                            <div class="content-text text-xs-center m-b-0">
                                <span class="font-size-40 font-weight-100">@Model.TrialDaysLeft days</span>
                            </div>
                        </div>
                    </div>
                </div>
                }
                else
                {
                    <div class="col-xl-4 col-md-6 col-xs-12 info-panel">
                        <div class="card card-shadow">
                            <div class="card-block bg-white p-20">
                                <button type="button" class="btn btn-floating btn-sm btn-info">
                                    <i class="icon wb-stats-bars"></i>
                                </button>
                                <span class="m-l-15 font-weight-400">TOTAL CHATS FOR LAST @(Model.DailyChats.Count()) DAYS</span>
                                <div class="content-text text-xs-center m-b-0">
                                    <span class="font-size-40 font-weight-100">@Model.TotalChats</span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <div class="panel panel-bordered">
                        <div class="panel-body">
                            <canvas id="chats-per-day" width="400" height="90"></canvas>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


@section js
{
    @Scripts.Render("~/bundles/js/dashboard")
}


<script type="text/javascript">

    $(document).ready(function () {

        var dashboardViewModel = new DashboardViewModel();
        ko.applyBindings(dashboardViewModel, document.getElementById("dashboard"));

        dashboardViewModel.init();

        // chart widget
        var ctx = document.getElementById("chats-per-day");

        window.chartColors = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(201, 203, 207)'
        };

        var chatsPerDayData = JSON.parse('@(Html.Raw(JsonConvert.SerializeObject(Model.DailyChats)))');

        var dailyChats = [];
        var daysLabels = [];

        if (chatsPerDayData != null) {
            for (var item of chatsPerDayData) {
                dailyChats.push(item.chats);
            }

            for (var item of chatsPerDayData) {
                var utcTime = parseInt(item.day, 10) || 0;
                var date = moment(utcTime);               

                daysLabels.push(date.format('D MMM'));
            }
        }

        var myLineChart = new Chart(ctx, {
            type: 'line',           
            data: {
                labels: daysLabels,
                datasets: [{                   
                    backgroundColor: window.chartColors.red,
                    borderColor: window.chartColors.red,                    
                    backgroundColor: "rgba(255,99,132,0.2)",
                    data: dailyChats,
                }]
            },
            options: {
                legend: {
                    display: false
                },
                responsive: true,
                title: {
                    display: true,
                    text: 'Daily chats for the last @(Model.DailyChats.Count()) days'
                },
                scales: {
                    xAxes: [{
                        display: true,
                    }],
                    yAxes: [{
                        display: true,
                        ticks: {
                            beginAtZero: true,
                            stepSize: 1
                        }
                    }]
                }
            }
        });
    });

</script>